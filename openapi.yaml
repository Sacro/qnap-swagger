---

openapi: 3.1.0

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: mgs

info:
  title: QNAP API
  version: 0.0.1

paths:
  /api/autovoip/oui/create:
    post:
      summary: Add an AutoVOIP OUI
      security:
        - cookieAuth: []
      tags:
        - autovoip
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oui:
                  type: string

  /api/autovoip/oui/delete:
    post:
      summary: Delete an AutoVOIP OUI
      security:
        - cookieAuth: []
      tags:
        - autovoip
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oui:
                  type: string

  /api/autovoip/oui/get:
    post:
      summary: Get the AutoVOIP OUI
      security:
        - cookieAuth: []
      tags:
        - autovoip

  /api/autovoip/state/get:
    post:
      summary: Get the AutoVOIP state
      security:
        - cookieAuth: []
      tags:
        - autovoip

  /api/autovoip/state/set:
    post:
      summary: Set the AutoVOIP state
      security:
        - cookieAuth: []
      tags:
        - autovoip
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gstate:
                  type: integer
                  minimum: 0

  /api/cfg/default:
    post:
      summary: Get the default configuration
      security:
        - cookieAuth: []
      tags:
        - cfg

  /api/cfgg/save:
    post:
      summary: Save the current configuration
      security:
        - cookieAuth: []
      tags:
        - cfg

  /api/cfg/upload:
    post:
      summary: Upload a new configuration
      security:
        - cookieAuth: []
      tags:
        - cfg
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object

  /api/cfg/validate:
    post:
      summary: Validate the current configuration
      security:
        - cookieAuth: []
      tags:
        - cfg

  /api/dos/get:
    post:
      summary: Get the DoS configuration
      security:
        - cookieAuth: []
      tags:
        - dos

  /api/dos/set:
    post:
      summary: Set the DoS configuration
      security:
        - cookieAuth: []
      tags:
        - dos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                macLand:
                  type: integer
                  minimum: 0
                ipDaEqSa:
                  type: integer
                  minimum: 0
                tcpDpEqSp:
                  type: integer
                  minimum: 0
                udpDpEqSp:
                  type: integer
                  minimum: 0
                tcpNullScan:
                  type: integer
                  minimum: 0
                tcpXmasScan:
                  type: integer
                  minimum: 0
                tcpSynFinScan:
                  type: integer
                  minimum: 0
                tcpSync:
                  type: integer
                  minimum: 0
                tcpHdrFrag:
                  type: integer
                  minimum: 0
                ipv4IcmpFrag:
                  type: integer
                  minimum: 0
                ipv6IcmpFrag:
                  type: integer
                  minimum: 0
                icmp4LongPing:
                  type: integer
                  minimum: 0
                icmp6LongPing:
                  type: integer
                  minimum: 0

  /api/fw/data/get:
    post:
      summary: Get the firmware data
      security:
        - cookieAuth: []
      tags:
        - fw

  /api/fw/image/toggle:
    post:
      summary: Toggle the firmware image
      security:
        - cookieAuth: []
      tags:
        - fw

  /api/fw/upload:
    post:
      summary: Upload a new firmware
      security:
        - cookieAuth: []
      tags:
        - fw
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object

  /api/fw/version/set:
    post:
      summary: Set the firmware version
      security:
        - cookieAuth: []
      tags:
        - fw
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                index: integer
                verInfo: string

  /api/host/add:
    post:
      summary: Add a host
      security:
        - cookieAuth: []
      tags:
        - host
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ipv6:
                  type: string
                  oneOf:
                    - const: 0
                ipaddr:
                  type: string
                  format: ipv4

  /api/host/delete:
    post:
      summary: Delete a host
      security:
        - cookieAuth: []
      tags:
        - host
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ipv6:
                  type: string
                  oneOf:
                    - const: 0
                ipaddr:
                  type: string
                  format: ipv4

  /api/host/get:
    post:
      summary: Get a host
      security:
        - cookieAuth: []
      tags:
        - host

  /api/host/state/set:
    post:
      summary: Set a host state
      security:
        - cookieAuth: []
      tags:
        - host
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enable:
                  type: integer
                  minimum: 0

  /api/intf/list/get:
    post:
      summary: Get a list of interfaces
      security:
        - cookieAuth: []
      tags:
        - intf

  /api/l2/table/count/get:
    post:
      summary: Get the L2 count table
      security:
        - cookieAuth: []
      tags:
        - l2

  /api/l2/table/get:
    post:
      summary: Get the L2 table
      security:
        - cookieAuth: []
      tags:
        - l2
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mac:
                  type: object
                port:Id:
                  type: object
                vlan:
                  type: object

  /api/lag/create:
    post:
      summary: Create a link aggregation
      security:
        - cookieAuth: []
      tags:
        - lag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                descr:
                  type: string
                  maxLength: 17
                members:
                  type: string
                  pattern: ^(\d+)(,\s*\d+)*$

  /api/lag/delete:
    post:
      summary: Delete a link aggregation
      security:
        - cookieAuth: []
      tags:
        - lag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lag:
                  type: integer
                  minimum: 0


  /api/lag/get:
    post:
      summary: Get a link aggregation
      security:
        - cookieAuth: []
      tags:
        - lag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lag:
                  type: integer
                  minimum: 0

  /api/lag/hash/get:
    post:
      summary: Get a link aggregation hash
      security:
        - cookieAuth: []
      tags:
        - lag

  /api/lag/hash/set:
    post:
      summary: Set a link aggregation hash
      security:
        - cookieAuth: []
      tags:
        - lag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hash:
                  type: string
                  oneOf:
                    - const: mac-da
                    - const: mac-dasa
                    - const: mac-dasa-vlan
                    - const: mac-dasa-vlan-ip

  /api/lag/intf/set:
    post:
      summary: Set a link aggregation interface
      security:
        - cookieAuth: []
      tags:
        - lag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  minimum: 0
                descr:
                  type: string
                members:
                  type: string
                  pattern: ^(\d+)(,\s*\d+)*$

  /api/lag/portmap/get:
    post:
      summary: Get the link aggregation port map
      security:
        - cookieAuth: []
      tags:
        - lag

  /api/lbd/global/get:
    post:
      summary: Get the global loopback detection state
      security:
        - cookieAuth: []
      tags:
        - lbd

  /api/lbd/global/set:
    post:
      summary: Set the global loopback detection state
      security:
        - cookieAuth: []
      tags:
        - lbd
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                globalEnabled:
                  type: integer
                  minimum: 0
                txTime:
                  type: integer
                  minimum: 0
                shutdownTime:
                  type: integer
                  minimum: 0

  /api/lbd/port/get:
    post:
      summary: Get the loopback detection state of a port
      security:
        - cookieAuth: []
      tags:
        - lbd

  /api/lbd/port/set:
    post:
      summary: Set the loopback detection state of a port
      security:
        - cookieAuth: []
      tags:
        - lbd
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0
                enabled:
                  type: integer
                  minimum: 0
                action:
                  type: integer
                  minimum: 0
                transmit:
                  type: integer
                  minimum: 0

  /api/mirror/delete:
    post:
      summary: Delete a port mirror
      security:
        - cookieAuth: []
      tags:
        - mirror

  /api/mirror/get:
    post:
      summary: Get a port mirror
      security:
        - cookieAuth: []
      tags:
        - mirror

  /api/mirror/set:
    post:
      summary: Set a port mirror
      security:
        - cookieAuth: []
      tags:
        - mirror
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                destPort:
                  type: integer
                egressSrcPorts:
                  type: array,
                  items:
                    type: integer
                    minimum: 0
                ingressSrcPorts:
                  type: array,
                  items:
                    type: integer
                    minimum: 0
                egressSrcVLANs:
                  type: array,
                  items:
                    type: integer
                    minimum: 0
                ingressSrcVLANs:
                  type: array,
                  items:
                    type: integer
                    minimum: 0

  /api/port/admin/get:
    post:
      summary: Get the admin state of a port
      security:
        - cookieAuth: []
      tags:
        - port
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0

  /api/port/get:
    post:
      summary: Get a port
      security:
        - cookieAuth: []
      tags:
        - port
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0

  /api/port/link/state/get:
    post:
      summary: Get the link state of a port
      security:
        - cookieAuth: []
      tags:
        - port
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0

  /api/port/list/get:
    post:
      summary: Get a list of the ports
      security:
        - cookieAuth: []
      tags:
        - port

  /api/port/phys/type/get:
    post:
      summary: Get the physical type of a port
      security:
        - cookieAuth: []
      tags:
        - port
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0

  /api/port/set:
    post:
      summary: Set the port details
      security:
        - cookieAuth: []
      tags:
        - port
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0
                description:
                  type: string
                admin:
                  type: integer
                  minimum: 0
                autoneg:
                  type: integer
                  oneOf:
                    - const: 0
                    - const: 1
                speed:
                  type: integer
                  minimum: 0
                fdx:
                  type: integer
                  oneOf:
                    - const: 0
                    - const: 1
                flow:
                  type: integer
                  minimum: 0

  /api/port/speed/max/get:
    post:
      summary: Get the maximum speed of a port
      security:
        - cookieAuth: []
      tags:
        - port
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0


  /api/port/stats_err/get:
    post:
      summary: Get the stats/errors of a port
      security:
        - cookieAuth: []
      tags:
        - port
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0


  /api/port/stats_rst/set:
    post:
      summary: Reset the stats of a port
      security:
        - cookieAuth: []
      tags:
        - port
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0

  /api/port/stats/clear:
    post:
      summary: Clear the stats of a port / ports
      security:
        - cookieAuth: []
      tags:
        - port
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: array
                  items:
                    type: integer
                    minimum: 0

  /api/port/stats/get:
    post:
      summary: Get the stats of a port / ports
      security:
        - cookieAuth: []
      tags:
        - port
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0


  /api/qos/dot1p/mapping/get:
    post:
      summary: Get the 802.1p QoS mappings
      security:
        - cookieAuth: []
      tags:
        - qos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dot1p:
                  type: integer
                  minimum: 0

  /api/qos/dot1p/mapping/set:
    post:
      summary: Set the 802.1p QoS mappings
      security:
        - cookieAuth: []
      tags:
        - qos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dot1p:
                  type: array
                  items:
                    type: string
                    pattern: ^0x(?:[0-9]|[A-F]){2}$

  /api/qos/dscp/mapping/get:
    post:
      summary: Get the 802.1p QoS mappings
      security:
        - cookieAuth: []
      tags:
        - qos

  /api/qos/dscp/mapping/set:
    post:
      summary: Set the DSCP QoS mappings
      security:
        - cookieAuth: []
      tags:
        - qos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0

  /api/qos/port/ratelimit/get:
    post:
      summary: Get the rate limit of a port
      security:
        - cookieAuth: []
      tags:
        - qos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0

  /api/qos/port/ratelimit/set:
    post:
      summary: Set the rate limit of a port
      security:
        - cookieAuth: []
      tags:
        - qos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0
                ingress:
                  type: object
                  properties:
                    admin:
                      type: integer
                      minimum: 0
                    rate:
                      type: integer
                      minimum: 0
                    unit:
                      type: string
                      oneOf:
                        - const: pps
                egress:
                  type: object
                  properties:
                    admin:
                      type: integer
                      minimum: 0
                    rate:
                      type: integer
                      minimum: 0
                    unit:
                      type: string
                      oneOf:
                        - const: pps

  /api/qos/port/sched/get:
    post:
      summary: Get the QoS schedule of a port
      security:
        - cookieAuth: []
      tags:
        - qos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0

  /api/qos/port/sched/set:
    post:
      summary: Set the QoS schedule of a port
      security:
        - cookieAuth: []
      tags:
        - qos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0
                mode:
                  type: integer
                  oneOf:
                    - const: 0
                    - const: 1
                rrweights:
                  type: array
                  maxItems: 8
                  items:
                    type: integer
                    minimum: 1
                    maximum: 128

  /api/session/login:
    post:
      summary: Log in to the device
      tags:
        - session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user: string
                password: string

  /api/session/logout:
    post:
      summary: Log out of the device
      tags:
        - session

  /api/sntp/get:
    post:
      summary: Get the SNTP configuration
      security:
        - cookieAuth: []
      tags:
        - sntp

  /api/sntp/set:
    post:
      summary: Set the SNTP configuration
      security:
        - cookieAuth: []
      tags:
        - snp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stale:
                  type: integer
                  oneOf:
                    - const: 0
                    - const: 1
                  default: 0
                poll:
                  type: integer
                  minimum: 0
                ipv4:
                  type: string
                  format: ipv4
                tz:
                  type: integer
                  minimum: 0

  /api/storm/get:
    post:
      summary: Get the broadcast configuration
      security:
        - cookieAuth: []
      tags:
        - storm

  /api/storm/set:
    post:
      summary: Set the broadcast configuration
      security:
        - cookieAuth: []
      tags:
        - storm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                unicast:
                  type: object
                  properties:
                    admin:
                      type: integer
                      minimum: 0
                    meas:
                      type: object
                multicast:
                  type: object
                  properties:
                    admin:
                      type: integer
                      minimum: 0
                    meas:
                      type: object
                broadcast:
                  type: object
                  properties:
                    admin:
                      type: integer
                      minimum: 0
                    meas:
                      type: object

  /api/system/led/set:
    post:
      summary: Set the device LED state
      security:
        - cookieAuth: []
      tags:
        - system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                led_offset:
                  type: integer
                  minimum: 0
                value:
                  type: integer
                  minimum: 0

  /api/system/logintime/set:
    post:
      summary: Set the timeout for users to log in
      security:
        - cookieAuth: []
      tags:
        - system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                can_logintime:
                  type: integer
                  minimum: 0

  /api/system/loopmode/set:
    post:
      summary: Set the device loopback detection
      security:
        - cookieAuth: []
      tags:
        - system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                loopback_mode:
                  type: integer
                  oneOf:
                    - const: 0
                    - const: 1

  /api/system/macaddr/set:
    post:
      summary: Set the device MAC address
      security:
        - cookieAuth: []
      tags:
        - system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mac_addr:
                  type: string
                  pattern: ^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$

  /api/system/microled/set:
    post:
      summary: Set the device microled configuration
      security:
        - cookieAuth: []
      tags:
        - system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                led_mode:
                  type: integer
                  minimum: 0

  /api/system/params/get:
    post:
      summary: Get the device parameters
      security:
        - cookieAuth: []
      tags:
        - system

  /api/system/params/set:
    post:
      summary: Set the device parameters
      security:
        - cookieAuth: []
      tags:
        - system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cfg_descr:
                  type: string
                  maxLength: 64
                dev_id:
                  type: string
                  maxLength: 32
                dev_name:
                  type: string
                  maxLength: 32
                dev_loc:
                  type: string
                  maxLength: 32
                dev_desc:
                  type: string
                  maxLength: 32
                dhcpv4:
                  type: integer
                  oneOf:
                    - const: 0
                    - const: 1
                ssl:
                  type: integer
                  oneOf:
                    - const: 0
                    - const: 1
                l2Agetime:
                  type: integer
                  minimum: 0
                sessTTL:
                  type: integer
                  minimum: 0
                  description: in minutes
                ipv4:
                  type: string
                  format: ipv4
                subnet:
                  type: string
                  format: ipv4
                gw:
                  type: string
                  format: ipv4

  /api/system/password/set:
    post:
      summary: Change the device password
      security:
        - cookieAuth: []
      tags:
        - system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pwd:
                  type: string
                new_pwd:
                  type: string

  /api/system/phy_fw_ver/get:
    post:
      summary: Get the device firmware version
      security:
        - cookieAuth: []
      tags:
        - system

  /api/system/reboot:
    post:
      summary: Reboot the device
      security:
        - cookieAuth: []
      tags:
        - system

  /api/system/serial_number/set:
    post:
      summary: Set the device serial number
      security:
        - cookieAuth: []
      tags:
        - system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serial_number:
                  type: string

  /api/system/stop_ip/set:
    post:
      summary: Stop the device listening
      security:
        - cookieAuth: []
      tags:
        - system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stop_ip:
                  type: integer
                  oneOf:
                    - const: 0
                    - const: 1

  /api/system/sysloop_led/set:
    post:
      summary: Set the system loop LED
      security:
        - cookieAuth: []
      tags:
        - system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                system_loop_led:
                  type: integer
                  oneOf:
                    - const: 0
                    - const: 1

  /api/system/testmode/set:
    post:
      summary: Set the device test mode
      security:
        - cookieAuth: []
      tags:
        - system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                test_mode:
                  type: integer
                  minimum: 0

  /api/user/detete:
    post:
      summary: Delete a user
      security:
        - cookieAuth: []
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: string

  /api/user/get:
    post:
      summary: Get a list of users
      security:
        - cookieAuth: []
      tags:
        - user

  /api/user/set:
    post:
      summary: Set user configuration
      security:
        - cookieAuth: []
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                add:
                  type: integer
                  minimum: 0
                user:
                  type: string
                pass:
                  type: string

  /api/vlan/create:
    post:
      summary: Create a VLAN
      security:
        - cookieAuth: []
      tags:
        - vlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vlan:
                  type: integer
                  minimum: 0

  /api/vlan/delete:
    post:
      summary: Delete a VLAN
      security:
        - cookieAuth: []
      tags:
        - vlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vlan:
                  type: integer
                  minimum: 0

  /api/vlan/get:
    post:
      summary: Get a VLAN or VLANs
      security:
        - cookieAuth: []
      tags:
        - vlan
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                vlan:
                  type: integer
                  minimum: 0

  /api/vlan/mode/get:
    post:
      summary: Get the VLAN modes
      security:
        - cookieAuth: []
      tags:
        - vlan

  /api/vlan/mode/set:
    post:
      summary: Set the VLAN modes
      security:
        - cookieAuth: []
      tags:
        - vlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mode:
                  type: integer
                  minimum: 0

  /api/vlan/port/get:
    post:
      summary: Get VLAN configuration of a port
      security:
        - cookieAuth: []
      tags:
        - vlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0

  /api/vlan/port/set:
    post:
      summary: Set the VLAN configuration of a port
      security:
        - cookieAuth: []
      tags:
        - vlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port:
                  type: integer
                  minimum: 0
                accept:
                  type: integer
                  minimum: 0
                pvid:
                  type: integer
                  minimum: 0

  /api/vlan/set:
    post:
      summary: Set VLAN membership
      security:
        - cookieAuth: []
      tags:
        - vlan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                vlan:
                  type: integer
                  minimum: 0
                membership:
                  type: array
                  items:
                    type: object
                    properties:
                      interface:
                        type: integer
                        minimum: 0
                      mbr:
                        type: integer
                        oneOf:
                          - title: Disable
                            const: 0
                          - title: Untagged
                            const: 1
                          - title: Tagged
                            const: 2

  /api/session_check:
    post:
      summary: Check the session
      security:
        - cookieAuth: []
      tags:
        - session

servers:
  - url: http:/api//{ip}/
    description: Default switch URL
    variables:
      ip:
        default: 1.1.1.100
